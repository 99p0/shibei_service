<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Birdplanet.com Inc.
  ~  Copyright (c) 2019-2019 All Rights Reserved.
  -->

<!-- 不要忘记设置系统属性
-Dlog4j2.contextSelector = org.apache.logging.log4j.core.async.AsyncLoggerContextSelector
使所有记录器异步。 -->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration >>> status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--Configuration >>> monitorInterval：Log4j2能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration>
  <!-- 定义日志存放目录 -->
  <properties>
    <Property name="PID">????</Property>
    <Property name="LOG_EXCEPTION_CONVERSION_WORD">%xwEx</Property>
    <Property name="LOG_LEVEL_PATTERN">%5p</Property>
    <Property name="LOG_DATEFORMAT_PATTERN">yyyy-MM-dd HH:mm:ss.SSS</Property>
    <Property name="CONSOLE_LOG_PATTERN">%clr{%d{${LOG_DATEFORMAT_PATTERN}}}{faint} %clr{${LOG_LEVEL_PATTERN}} %clr{${sys:PID}}{magenta} %clr{---}{faint} %clr{[%15.15t]}{faint} %clr{%-40.40c{1.}}{cyan} .%clr{%M(%L)}{faint} %clr{:}{faint} %m%n${sys:LOG_EXCEPTION_CONVERSION_WORD}</Property>
    <Property name="FILE_LOG_PATTERN">%d{${LOG_DATEFORMAT_PATTERN}} ${LOG_LEVEL_PATTERN} ${sys:PID} --- [%t] %c .%M %L : %m%n${sys:LOG_EXCEPTION_CONVERSION_WORD}</Property>
  </properties>

  <appenders>
    <!--这个输出控制台的配置-->
    <console name="Console" target="SYSTEM_OUT" follow="true">
      <PatternLayout charset="UTF-8" pattern="${sys:CONSOLE_LOG_PATTERN}"/>
    </console>

    <!-- Debug >>> 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
    <RollingFile name="RollingFileDebug" fileName="${sys:LOG_PATH}/debug.log" filePattern="${sys:LOG_PATH}/$${date:yyyy-MM}/%d{yyyy-MM-dd}-debug-%i.log.gz">
      <PatternLayout charset="UTF-8" pattern="${sys:FILE_LOG_PATTERN}"/>
      <Policies>
        <TimeBasedTriggeringPolicy interval="1"/>
        <SizeBasedTriggeringPolicy size="100 MB"/>
      </Policies>
      <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
      <DefaultRolloverStrategy max="31"/>
    </RollingFile>
    <!-- Info -->
    <RollingFile name="RollingFileInfo" fileName="${sys:LOG_PATH}/info.log" filePattern="${sys:LOG_PATH}/$${date:yyyy-MM}/%d{yyyy-MM-dd}-info-%i.log.gz">
      <PatternLayout charset="UTF-8" pattern="${sys:FILE_LOG_PATTERN}"/>
      <Filters>
        <!-- 只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
        <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
        <ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL"/>
      </Filters>
      <Policies>
        <TimeBasedTriggeringPolicy interval="1"/>
        <SizeBasedTriggeringPolicy size="100 MB"/>
      </Policies>
      <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
      <DefaultRolloverStrategy max="31"/>
    </RollingFile>
    <!-- Error -->
    <RollingFile name="RollingFileError" fileName="${sys:LOG_PATH}/error.log" filePattern="${sys:LOG_PATH}/$${date:yyyy-MM}/%d{yyyy-MM-dd}-error-%i.log.gz">
      <PatternLayout charset="UTF-8" pattern="${sys:FILE_LOG_PATTERN}"/>
      <ThresholdFilter level="ERROR"/>
      <Policies>
        <TimeBasedTriggeringPolicy interval="1"/>
        <SizeBasedTriggeringPolicy size="100 MB"/>
      </Policies>
      <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
      <DefaultRolloverStrategy max="31"/>
    </RollingFile>
  </appenders>

  <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
  <loggers>
    <!-- 禁用结果集输出 -->
    <LOGGER name="druid.sql.ResultSet" level="off"/>
    <logger name="sdk.biz.info" level="OFF"/>
    <logger name="io.swagger.models.parameters" level="OFF"/>
    <logger name="com.alipay.api.internal.util.AlipayLogger" level="DEBUG"/>
    <LOGGER name="com.alibaba.druid.pool.DruidDataSourceStatLoggerImpl" level="OFF"/>

    <root level="DEBUG" >
      <AppenderRef ref="RollingFileDebug"/>
      <AppenderRef ref="RollingFileError"/>
      <AppenderRef ref="RollingFileInfo"/>
    </root>
  </loggers>
</configuration>
